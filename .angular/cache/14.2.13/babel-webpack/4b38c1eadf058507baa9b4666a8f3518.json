{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StudentService = /*#__PURE__*/(() => {\n  class StudentService {\n    constructor(http) {\n      this.http = http;\n    }\n    /**\n     * Get list of all students\n     */\n\n\n    getStudents() {\n      return this.http.get(`${environment.apiUrl}/students`).pipe(catchError(error => {\n        console.error('Error fetching students:', error);\n        return of(this.getMockStudents());\n      }));\n    }\n    /**\n     * Get details of a specific student\n     * @param id Student ID\n     */\n\n\n    getStudentById(id) {\n      return this.http.get(`${environment.apiUrl}/students/${id}`).pipe(catchError(error => {\n        console.error(`Error fetching student ${id}:`, error);\n        return of(this.getMockStudentById(id));\n      }));\n    }\n    /**\n     * Mock data for development/testing\n     */\n\n\n    getMockStudents() {\n      return [{\n        id: 1,\n        name: 'John Doe',\n        grade: 'A',\n        major: 'Computer Science',\n        email: 'john.doe@example.com',\n        enrollmentDate: '2022-09-01'\n      }, {\n        id: 2,\n        name: 'Jane Smith',\n        grade: 'B+',\n        major: 'Mathematics',\n        email: 'jane.smith@example.com',\n        enrollmentDate: '2022-08-15'\n      }, {\n        id: 3,\n        name: 'Michael Johnson',\n        grade: 'A-',\n        major: 'Physics',\n        email: 'michael.j@example.com',\n        enrollmentDate: '2021-09-01'\n      }, {\n        id: 4,\n        name: 'Emily Williams',\n        grade: 'B',\n        major: 'Biology',\n        email: 'emily.w@example.com',\n        enrollmentDate: '2022-01-15'\n      }, {\n        id: 5,\n        name: 'David Brown',\n        grade: 'A+',\n        major: 'Chemistry',\n        email: 'david.b@example.com',\n        enrollmentDate: '2021-01-20'\n      }];\n    }\n    /**\n     * Get mock student by ID\n     * @param id Student ID\n     */\n\n\n    getMockStudentById(id) {\n      const mockStudents = this.getMockStudents();\n      const student = mockStudents.find(s => s.id === id);\n\n      if (student) {\n        // Add additional details for the detailed view\n        return { ...student,\n          address: '123 Campus Ave, University City, ST 12345',\n          phone: '(555) 123-4567',\n          dateOfBirth: '1999-05-15',\n          currentGPA: 3.85,\n          credits: 78,\n          academicStatus: 'Good Standing',\n          advisorName: 'Dr. Robert Smith'\n        };\n      } // Return a default student if ID not found\n\n\n      return {\n        id: 0,\n        name: 'Student Not Found',\n        email: 'N/A',\n        grade: 'N/A',\n        major: 'N/A',\n        enrollmentDate: 'N/A'\n      };\n    }\n\n  }\n\n  StudentService.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  StudentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n  return StudentService;\n})();","map":null,"metadata":{},"sourceType":"module"}